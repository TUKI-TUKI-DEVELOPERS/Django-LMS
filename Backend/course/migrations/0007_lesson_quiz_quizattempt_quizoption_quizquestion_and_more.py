# Generated by Django 4.0.8 on 2025-08-08 20:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_alter_parent_relation_ship_alter_student_level_and_more'),
        ('course', '0006_course_image'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título de la lección', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción de la lección', null=True)),
                ('lesson_type', models.CharField(choices=[('video', 'Video'), ('text', 'Texto'), ('quiz', 'Cuestionario'), ('activity', 'Actividad Práctica'), ('assignment', 'Tarea')], default='text', max_length=20)),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de la lección en el módulo')),
                ('duration_minutes', models.PositiveIntegerField(default=0, help_text='Duración estimada en minutos')),
                ('is_required', models.BooleanField(default=True, help_text='¿Es obligatoria esta lección?')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título del cuestionario', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción del cuestionario', null=True)),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Puntuación mínima para aprobar (%)')),
                ('time_limit_minutes', models.PositiveIntegerField(default=0, help_text='Límite de tiempo en minutos (0 = sin límite)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='course.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_passed', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken_minutes', models.PositiveIntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='course.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to='accounts.student')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(help_text='Texto de la opción', max_length=500)),
                ('is_correct', models.BooleanField(default=False, help_text='¿Es la respuesta correcta?')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de la opción')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='Texto de la pregunta')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Opción Múltiple'), ('true_false', 'Verdadero/Falso'), ('short_answer', 'Respuesta Corta'), ('essay', 'Ensayo')], default='multiple_choice', max_length=20)),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de la pregunta')),
                ('points', models.PositiveIntegerField(default=1, help_text='Puntos por pregunta')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='course.quiz')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuizResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_response', models.TextField(blank=True, help_text='Respuesta de texto para preguntas abiertas', null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('points_earned', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='course.quizattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='course.quizquestion')),
                ('selected_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='course.quizoption')),
            ],
        ),
        migrations.AddField(
            model_name='quizoption',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='course.quizquestion'),
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título del módulo', max_length=200)),
                ('description', models.TextField(help_text='Descripción del módulo')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden del módulo en el curso')),
                ('image', models.ImageField(blank=True, help_text='Imagen de portada del módulo', null=True, upload_to='module_images/%Y/%m/%d/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='course.course')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('course', 'order')},
            },
        ),
        migrations.CreateModel(
            name='LessonContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_content', models.TextField(blank=True, help_text='Contenido de texto de la lección', null=True)),
                ('video_url', models.URLField(blank=True, help_text='URL del video (YouTube, Vimeo, etc.)', null=True)),
                ('video_file', models.FileField(blank=True, help_text='Archivo de video local', null=True, upload_to='lesson_videos/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attachments', models.ManyToManyField(blank=True, help_text='Archivos adjuntos', to='course.upload')),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='course.lesson')),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='course.module'),
        ),
        migrations.CreateModel(
            name='StudentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent_minutes', models.PositiveIntegerField(default=0, help_text='Tiempo dedicado en minutos')),
                ('notes', models.TextField(blank=True, help_text='Notas del estudiante', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='course.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='accounts.student')),
            ],
            options={
                'unique_together': {('student', 'lesson')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('module', 'order')},
        ),
        migrations.CreateModel(
            name='ActivitySubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título de la entrega', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción de la entrega', null=True)),
                ('file', models.FileField(blank=True, help_text='Archivo de la entrega', null=True, upload_to='activity_submissions/%Y/%m/%d/')),
                ('image', models.ImageField(blank=True, help_text='Imagen de la entrega', null=True, upload_to='activity_submissions/%Y/%m/%d/')),
                ('url', models.URLField(blank=True, help_text='URL de la entrega (si es online)', null=True)),
                ('is_submitted', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True, help_text='Comentarios del instructor', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='course.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_submissions', to='accounts.student')),
            ],
            options={
                'ordering': ['-submitted_at'],
                'unique_together': {('student', 'lesson')},
            },
        ),
    ]
