# Generated by Django 4.0.8 on 2025-08-09 16:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('course', '0007_lesson_quiz_quizattempt_quizoption_quizquestion_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='LessonBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_type', models.CharField(choices=[('text', 'Bloque de Texto'), ('video', 'Video'), ('image', 'Imagen'), ('quiz', 'Cuestionario'), ('file', 'Archivo/Documento'), ('presentation', 'Presentación'), ('code', 'Código'), ('audio', 'Audio'), ('embed', 'Contenido Embebido'), ('divider', 'Separador')], help_text='Tipo de bloque', max_length=20)),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden del bloque en la lección')),
                ('title', models.CharField(blank=True, help_text='Título del bloque', max_length=200, null=True)),
                ('text_content', models.TextField(blank=True, help_text='Contenido de texto (soporta HTML)', null=True)),
                ('video_url', models.URLField(blank=True, help_text='URL del video (YouTube, Vimeo, etc.)', null=True)),
                ('video_file', models.FileField(blank=True, help_text='Archivo de video local', null=True, upload_to='lesson_videos/%Y/%m/%d/')),
                ('audio_file', models.FileField(blank=True, help_text='Archivo de audio', null=True, upload_to='lesson_audios/%Y/%m/%d/')),
                ('image', models.ImageField(blank=True, help_text='Imagen', null=True, upload_to='lesson_images/%Y/%m/%d/')),
                ('file', models.FileField(blank=True, help_text='Archivo/documento', null=True, upload_to='lesson_files/%Y/%m/%d/')),
                ('embed_url', models.URLField(blank=True, help_text='URL para contenido embebido', null=True)),
                ('embed_code', models.TextField(blank=True, help_text='Código HTML para embeber', null=True)),
                ('width', models.CharField(default='100%', help_text='Ancho del bloque (ej: 100%, 50%, 300px)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='Alto del bloque (opcional)', max_length=10, null=True)),
                ('background_color', models.CharField(blank=True, help_text='Color de fondo (hex)', max_length=7, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='course.lesson')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuizBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título del cuestionario', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción del cuestionario', null=True)),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Puntuación mínima para aprobar (%)')),
                ('time_limit_minutes', models.PositiveIntegerField(default=0, help_text='Límite de tiempo en minutos (0 = sin límite)')),
                ('attempts_allowed', models.PositiveIntegerField(default=1, help_text='Intentos permitidos')),
                ('show_results', models.BooleanField(default=True, help_text='¿Mostrar resultados al finalizar?')),
                ('randomize_questions', models.BooleanField(default=False, help_text='¿Aleatorizar preguntas?')),
                ('lesson_block', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_block', to='course.lessonblock')),
            ],
        ),
        migrations.CreateModel(
            name='QuizBlockQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='Texto de la pregunta')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Opción Múltiple'), ('true_false', 'Verdadero/Falso'), ('short_answer', 'Respuesta Corta'), ('essay', 'Ensayo'), ('matching', 'Relacionar'), ('fill_blank', 'Llenar Espacios')], default='multiple_choice', max_length=20)),
                ('explanation', models.TextField(blank=True, help_text='Explicación de la respuesta', null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de la pregunta')),
                ('points', models.PositiveIntegerField(default=1, help_text='Puntos por pregunta')),
                ('is_active', models.BooleanField(default=True)),
                ('quiz_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='course.quizblock')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuizBlockOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(help_text='Texto de la opción', max_length=500)),
                ('is_correct', models.BooleanField(default=False, help_text='¿Es la respuesta correcta?')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de la opción')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='course.quizblockquestion')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
